apiVersion: v1
kind: Service
metadata:
  name: mosquitto-service
spec:
  clusterIP: None
  selector:
    app: mosquitto
  ports:
    - name: mqtt
      protocol: TCP
      port: 1883
      targetPort: 1883
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: mosquitto-config
data:
  mosquitto.conf: |
    listener 1883
    allow_anonymous true
    log_type all

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mq-pv-claim
  labels:
    app: mosquitto
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mosquitto
  labels:
    app: mosquitto
spec:
  selector:
    matchLabels:
      app: mosquitto
  template:
    metadata:
      labels:
        app: mosquitto
    spec:
      containers:
        - image: eclipse-mosquitto:latest
          name: mosquitto
          ports:
            - containerPort: 1883
              name: mosquitto
          volumeMounts:
            - name: mosquitto-persistent-storage
              mountPath: /mosquitto/data
            - name: mosquitto-config
              mountPath: /mosquitto/config/mosquitto.conf
              subPath: mosquitto.conf
      volumes:
        - name: mosquitto-persistent-storage
          persistentVolumeClaim:
            claimName: mq-pv-claim
        - name: mosquitto-config
          configMap:
            name: mosquitto-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: publisher-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: publisher
  template:
    metadata:
      labels:
        app: publisher
    spec:
      containers:
        - name: publisher
          image: wastee941/softarchtest:publisher1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscriber-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: subscriber
  template:
    metadata:
      labels:
        app: subscriber
    spec:
      containers:
        - name: subscriber
          image: wastee941/softarchtest:subscriber
          ports:
            - containerPort: 80
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:password@postgres:5432/mydatabase
            - name: DB_USER
              value: postgres
            - name: DB_HOST
              value: postgres-service
            - name: DB_NAME
              value: mydatabase
            - name: DB_PASSWORD
              value: password
            - name: DB_PORT
              value: "5432"
            - name: PYTHONUNBUFFERED
              value: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_DB
              value: mydatabase
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
