version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  mosquitto-service:
    image: confluentinc/cp-kafka-mqtt:latest
    depends_on:
      - kafka
    environment:
      KAFKA_MQTT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      KAFKA_MQTT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MQTT_TOPIC_REGEX_LIST: random_number:.*random_number

  publisher:
    build:
      context: publisher
      dockerfile: Dockerfile
    depends_on:
      - mosquitto-service
      - postgres
    environment:
      - PYTHONUNBUFFERED=1
    deploy:
      mode: replicated
      replicas: 20

  subscriber:
    restart: always
    build:
      context: subscriber
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/mydatabase
      DB_USER: postgres
      DB_HOST: postgres
      DB_NAME: Sensor
      DB_PASSWORD: password
      DB_PORT: "5432"
    ports:
      - "8080:8080"
  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=Sensor
